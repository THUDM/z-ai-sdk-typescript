import { BaseRequestOptions, Usage } from './shared';

/**
 * The format to return the embeddings in
 */
export type EmbeddingEncodingFormat = 'float' | 'base64';

/**
 * Parameters for creating an embedding
 */
export interface EmbeddingCreateParams extends BaseRequestOptions {
  /**
   * Input text to embed, encoded as a string or array of tokens
   */
  input: string | string[] | number[] | number[][];
  
  /**
   * ID of the model to use
   */
  model: string;
  
  /**
   * The format to return the embeddings in
   */
  encoding_format?: EmbeddingEncodingFormat;
  
  /**
   * A unique identifier representing your end-user
   */
  user?: string;
  
  /**
   * Sensitive word check configuration
   */
  sensitive_word_check?: Record<string, any>;
}

/**
 * Represents an embedding vector returned by embedding endpoint
 */
export interface Embedding {
  /**
   * The object type, which is always "embedding"
   */
  object: 'embedding';
  
  /**
   * The embedding vector, which is a list of floats
   */
  embedding: number[];
  
  /**
   * The index of the embedding in the list of embeddings
   */
  index: number;
}

/**
 * Represents an embeddings response
 */
export interface CreateEmbeddingResponse {
  /**
   * The object type, which is always "list"
   */
  object: 'list';
  
  /**
   * The list of embeddings generated by the model
   */
  data: Embedding[];
  
  /**
   * The name of the model used to generate the embedding
   */
  model: string;
  
  /**
   * Usage statistics for the embedding request
   */
  usage: Usage;
}